<h1>程式</h1>
<p>在本分頁中，說明可利用不同的程式碼，來新增不同的程式。</p>
<p>像是利用<span>javascript程式來做出&lt;亂數產生系統&gt;程式</span></p>
<p><span>或者利用Brython來製作一個繪畫齒輪的程式以及&lt;ROC Flag&gt;分頁中的國旗標誌</span></p>
<p><span>又或者是利用Html5 Canvas 繪圖的程式碼製作的繪圖(畫圓)程式</span></p>
<p><span>雖然現在還沒有學到如何寫程式碼，也不知道相關應用，但可以透過網際內容管理課程時上課的內容以及<a href="http://mde.tw/wcm2019">2019 Spring 網際內容管理</a>網頁來進行學習。</span></p>
<h2>繪圖-齒輪</h2>
<!-- 導入 Brython 標準程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<p></p>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
</script>
<p><canvas height="600" id="onegear" width="800"></canvas></p>
<!-- 以下製作 button-->
<div height="20" id="onegear_div" width="800"></div>
<p><input id="n" type="text" value="22"/><br/> <button id="button">Set Number of Gears</button></p>
<!-- 以下實際利用  Brython 繪圖-->
<script type="text/python3">
from browser import document as doc
import math
# deg 為角度轉為徑度的轉換因子
deg = math.pi/180.
# 定義 Spur 類別
class Spur(object):
    def __init__(self, ctx):
        self.ctx = ctx
  
    def create_line(self, x1, y1, x2, y2, width=3, fill="red"):
        self.ctx.beginPath()
        self.ctx.lineWidth = width
        self.ctx.moveTo(x1, y1)
        self.ctx.lineTo(x2, y2)
        self.ctx.strokeStyle = fill
        self.ctx.stroke()
  
    # 定義一個繪正齒輪的繪圖函式
    # midx 為齒輪圓心 x 座標
    # midy 為齒輪圓心 y 座標
    # rp 為節圓半徑, n 為齒數
    # pa 為壓力角 (deg)
    # rot 為旋轉角 (deg)
    # 已經針對 n 大於等於 52 齒時的繪圖錯誤修正, 因為 base circle 與齒根圓大小必須進行判斷
    def Gear(self, midx, midy, rp, n=20, pa=20, color="black"):
        # 齒輪漸開線分成 15 線段繪製
        imax = 15
        # 在輸入的畫布上繪製直線, 由圓心到節圓 y 軸頂點畫一直線
        self.create_line(midx, midy, midx, midy-rp)
        # a 為模數 (代表公制中齒的大小), 模數為節圓直徑(稱為節徑)除以齒數
        # 模數也就是齒冠大小
        a=2*rp/n
        # d 為齒根大小, 為模數的 1.157 或 1.25倍, 這裡採 1.25 倍
        d=2.5*rp/n
        # ra 為齒輪的外圍半徑
        ra=rp+a
        # rb 則為齒輪的基圓半徑
        # 基圓為漸開線長齒之基準圓
        rb=rp*math.cos(pa*deg)
        # rd 為齒根圓半徑
        rd=rp-d
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        # dr 則為基圓到齒頂圓半徑分成 imax 段後的每段半徑增量大小
        # 將圓弧分成 imax 段來繪製漸開線
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        if rd>rb:
            dr = (ra-rd)/imax
        else:
            dr=(ra-rb)/imax
        # tan(pa*deg)-pa*deg 為漸開線函數
        sigma=math.pi/(2*n)+math.tan(pa*deg)-pa*deg
        for j in range(n):
            ang=-2.*j*math.pi/n+sigma
            ang2=2.*j*math.pi/n+sigma
            lxd=midx+rd*math.sin(ang2-2.*math.pi/n)
            lyd=midy-rd*math.cos(ang2-2.*math.pi/n)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd>rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(alpha-ang)
                ypt=r*math.cos(alpha-ang)
                xd=rd*math.sin(-ang)
                yd=rd*math.cos(-ang)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由左側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    lfx=midx+xpt
                    lfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # the line from last end of dedendum point to the recent
            # end of dedendum point
            # lxd 為齒根圓上的左側 x 座標, lyd 則為 y 座標
            # 下列為齒根圓上用來近似圓弧的直線
            self.create_line((lxd),(lyd),(midx+xd),(midy-yd),fill=color)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd>rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(ang2-alpha)
                ypt=r*math.cos(ang2-alpha)
                xd=rd*math.sin(ang2)
                yd=rd*math.cos(ang2)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由右側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    rfx=midx+xpt
                    rfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # lfx 為齒頂圓上的左側 x 座標, lfy 則為 y 座標
            # 下列為齒頂圓上用來近似圓弧的直線
            self.create_line(lfx,lfy,rfx,rfy,fill=color)
canvas = doc['onegear']
ctx = canvas.getContext("2d")
  
# 以 button 驅動的事件函式
def setgearnumber(e):
    ctx.clearRect(0, 0, canvas.width, canvas.height)
    x = (canvas.width)/2
    y = (canvas.height)/2
    if doc["n"].value.isdigit():
        n1 = int(doc["n"].value)
    else:
        n1= 25
    # 設定齒輪參數
    x = (canvas.width)/2
    y = (canvas.height)/2
    r = 0.6*(canvas.height/2)
    pa = 20
    # 繪出齒輪
    Spur(ctx).Gear(x, y, r, n1, pa, "blue")
#判定 button
setgearnumber(True)
doc['button'].bind('click',setgearnumber)
</script>
<p>上述正齒輪繪圖程式碼:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 導入 Brython 標準程式庫 --&gt;
&lt;script src="./../cmsimde/static/brython.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/brython_stdlib.js"&gt;&lt;/script&gt;
&lt;p&gt;&lt;/p&gt;
&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
&lt;/script&gt;
&lt;p&gt;&lt;canvas height="600" id="onegear" width="800"&gt;&lt;/canvas&gt;&lt;/p&gt;
&lt;!-- 以下製作 button--&gt;
&lt;div height="20" id="onegear_div" width="800"&gt;&lt;/div&gt;
&lt;p&gt;&lt;input id="n" type="text" value="22"&gt;&lt;br&gt; &lt;button id="button"&gt;Set Number of Gears&lt;/button&gt;&lt;/p&gt;
&lt;!-- 以下實際利用  Brython 繪圖--&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# deg 為角度轉為徑度的轉換因子
deg = math.pi/180.
# 定義 Spur 類別
class Spur(object):
    def __init__(self, ctx):
        self.ctx = ctx
  
    def create_line(self, x1, y1, x2, y2, width=3, fill="red"):
        self.ctx.beginPath()
        self.ctx.lineWidth = width
        self.ctx.moveTo(x1, y1)
        self.ctx.lineTo(x2, y2)
        self.ctx.strokeStyle = fill
        self.ctx.stroke()
  
    # 定義一個繪正齒輪的繪圖函式
    # midx 為齒輪圓心 x 座標
    # midy 為齒輪圓心 y 座標
    # rp 為節圓半徑, n 為齒數
    # pa 為壓力角 (deg)
    # rot 為旋轉角 (deg)
    # 已經針對 n 大於等於 52 齒時的繪圖錯誤修正, 因為 base circle 與齒根圓大小必須進行判斷
    def Gear(self, midx, midy, rp, n=20, pa=20, color="black"):
        # 齒輪漸開線分成 15 線段繪製
        imax = 15
        # 在輸入的畫布上繪製直線, 由圓心到節圓 y 軸頂點畫一直線
        self.create_line(midx, midy, midx, midy-rp)
        # a 為模數 (代表公制中齒的大小), 模數為節圓直徑(稱為節徑)除以齒數
        # 模數也就是齒冠大小
        a=2*rp/n
        # d 為齒根大小, 為模數的 1.157 或 1.25倍, 這裡採 1.25 倍
        d=2.5*rp/n
        # ra 為齒輪的外圍半徑
        ra=rp+a
        # rb 則為齒輪的基圓半徑
        # 基圓為漸開線長齒之基準圓
        rb=rp*math.cos(pa*deg)
        # rd 為齒根圓半徑
        rd=rp-d
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        # dr 則為基圓到齒頂圓半徑分成 imax 段後的每段半徑增量大小
        # 將圓弧分成 imax 段來繪製漸開線
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        if rd&gt;rb:
            dr = (ra-rd)/imax
        else:
            dr=(ra-rb)/imax
        # tan(pa*deg)-pa*deg 為漸開線函數
        sigma=math.pi/(2*n)+math.tan(pa*deg)-pa*deg
        for j in range(n):
            ang=-2.*j*math.pi/n+sigma
            ang2=2.*j*math.pi/n+sigma
            lxd=midx+rd*math.sin(ang2-2.*math.pi/n)
            lyd=midy-rd*math.cos(ang2-2.*math.pi/n)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(alpha-ang)
                ypt=r*math.cos(alpha-ang)
                xd=rd*math.sin(-ang)
                yd=rd*math.cos(-ang)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由左側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    lfx=midx+xpt
                    lfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # the line from last end of dedendum point to the recent
            # end of dedendum point
            # lxd 為齒根圓上的左側 x 座標, lyd 則為 y 座標
            # 下列為齒根圓上用來近似圓弧的直線
            self.create_line((lxd),(lyd),(midx+xd),(midy-yd),fill=color)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(ang2-alpha)
                ypt=r*math.cos(ang2-alpha)
                xd=rd*math.sin(ang2)
                yd=rd*math.cos(ang2)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由右側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    rfx=midx+xpt
                    rfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # lfx 為齒頂圓上的左側 x 座標, lfy 則為 y 座標
            # 下列為齒頂圓上用來近似圓弧的直線
            self.create_line(lfx,lfy,rfx,rfy,fill=color)
canvas = doc['onegear']
ctx = canvas.getContext("2d")
  
# 以 button 驅動的事件函式
def setgearnumber(e):
    ctx.clearRect(0, 0, canvas.width, canvas.height)
    x = (canvas.width)/2
    y = (canvas.height)/2
    if doc["n"].value.isdigit():
        n1 = int(doc["n"].value)
    else:
        n1= 25
    # 設定齒輪參數
    x = (canvas.width)/2
    y = (canvas.height)/2
    r = 0.6*(canvas.height/2)
    pa = 20
    # 繪出齒輪
    Spur(ctx).Gear(x, y, r, n1, pa, "blue")
#判定 button
setgearnumber(True)
doc['button'].bind('click',setgearnumber)
&lt;/script&gt;

</pre>
<p></p>
<h2>亂數產生系統</h2>
<p><button onclick="myFunction()">按一下</button></p>
<p id="demo"></p>
<script>
function myFunction() {
  document.getElementById("demo").innerHTML = Math.floor(Math.random()*50 + 1);
}
</script>
<p>上述程式原始碼:</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;p&gt;&lt;button onclick="myFunction()"&gt;Try it&lt;/button&gt;&lt;/p&gt;
&lt;p id="demo"&gt;&lt;/p&gt;
&lt;script&gt;// &lt;![CDATA[
function myFunction() {
  document.getElementById("demo").innerHTML = Math.floor(Math.random()*10);
}
// ]]&gt;&lt;/script&gt;</pre>
<p></p>
<h2>game-擲骰子</h2>
<script type="text/javascript">
var cwidth = 400;
    var cheight = 300;
    var dicex = 50;
    var dicey = 50;
    var dicewidth = 100;
    var diceheight = 100;
    var dotrad = 6;
    var ctx;
    var dx;
    var dy;
    var firstturn = true;
    var point;
function throwdice() {
    var sum;
    var ch = 1+Math.floor(Math.random()*6);
    sum = ch;
    dx = dicex;
    dy = dicey;
    drawface(ch);
    dx = dicex + 150;
    ch=1 + Math.floor(Math.random()*6);
    sum += ch;
    drawface(ch);
    if (firstturn) {
        switch(sum) {
            case 7:
            case 11:
              document.f.outcome.value="You win!";
              break;
            case 2:
            case 3:
            case 12:
              document.f.outcome.value="You lose!";
              break;
            default:
              point = sum;
              document.f.pv.value=point;
              firstturn = false;
              document.f.stage.value="Need follow-up throw.";
              document.f.outcome.value="   ";
        }
    }
    else {
        switch(sum) {
        case point:
           document.f.outcome.value="You win!";
           document.f.stage.value="Back to first throw.";
           document.f.pv.value=" ";
           firstturn = true;
           break;
        case 7:
           document.f.outcome.value="You lose!";
           document.f.stage.value="Back to first throw.";
           document.f.pv.value=" ";
           firstturn = true;
        }
            }
}
function drawface(n) {
  ctx = document.getElementById('canvas').getContext('2d');  
  ctx.lineWidth = 5;
  ctx.clearRect(dx,dy,dicewidth,diceheight);
  ctx.strokeRect(dx,dy,dicewidth,diceheight)
  var dotx;
  var doty;
  ctx.fillStyle = "#009966";
    switch(n) {
        case 1:
         draw1();
         break;
        case 2:
         draw2();
         break;
        case 3:
         draw2();
         draw1();
         break;
        case 4:
         draw4();
         break;
        case 5:
         draw4();
         draw1();
         break;
        case 6:
         draw4();
         draw2mid();
         break;
         
    }
}
function draw1() {
    var dotx;
    var doty;
    ctx.beginPath();
    dotx = dx + .5*dicewidth;
    doty = dy + .5*diceheight;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
}
function draw2() {
    var dotx;
    var doty;
    ctx.beginPath();
    dotx = dx + 3*dotrad;
    doty = dy + 3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    dotx = dx+dicewidth-3*dotrad;
    doty = dy+diceheight-3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
}
function draw4() {
    var dotx;
    var doty;
    ctx.beginPath();
    dotx = dx + 3*dotrad;
    doty = dy + 3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    dotx = dx+dicewidth-3*dotrad;
    doty = dy+diceheight-3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
    ctx.beginPath();
    dotx = dx + 3*dotrad;
    doty = dy + diceheight-3*dotrad;  //no change
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    dotx = dx+dicewidth-3*dotrad;
    doty = dy+ 3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill(); 
}
function draw2mid() {
    var dotx;
    var doty;
    ctx.beginPath();
    dotx = dx + 3*dotrad;
    doty = dy + .5*diceheight;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    dotx = dx+dicewidth-3*dotrad;
    doty = dy + .5*diceheight; //no change
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
}
</script>
<p><canvas height="300" id="canvas" width="400"> Your browser doesn't support the HTML5 element canvas. </canvas> <br/> <button onclick="throwdice();">擲骰子 </button></p>
<form id="f" name="f">Stage: <input name="stage" type="text" value="First Throw"/> Point: <input name="pv" type="text" value="   "/> Outcome: <input name="outcome" type="text" value="     "/></form>
<p>上述程式原始碼:</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;script type="text/javascript"&gt;// &lt;![CDATA[
var cwidth = 400;
    var cheight = 300;
    var dicex = 50;
    var dicey = 50;
    var dicewidth = 100;
    var diceheight = 100;
    var dotrad = 6;
    var ctx;
    var dx;
    var dy;
    var firstturn = true;
    var point;
function throwdice() {
    var sum;
    var ch = 1+Math.floor(Math.random()*6);
    sum = ch;
    dx = dicex;
    dy = dicey;
    drawface(ch);
    dx = dicex + 150;
    ch=1 + Math.floor(Math.random()*6);
    sum += ch;
    drawface(ch);
    if (firstturn) {
        switch(sum) {
            case 7:
            case 11:
              document.f.outcome.value="You win!";
              break;
            case 2:
            case 3:
            case 12:
              document.f.outcome.value="You lose!";
              break;
            default:
              point = sum;
              document.f.pv.value=point;
              firstturn = false;
              document.f.stage.value="Need follow-up throw.";
              document.f.outcome.value="   ";
        }
    }
    else {
        switch(sum) {
        case point:
           document.f.outcome.value="You win!";
           document.f.stage.value="Back to first throw.";
           document.f.pv.value=" ";
           firstturn = true;
           break;
        case 7:
           document.f.outcome.value="You lose!";
           document.f.stage.value="Back to first throw.";
           document.f.pv.value=" ";
           firstturn = true;
        }
            }
}
function drawface(n) {
  ctx = document.getElementById('canvas').getContext('2d');  
  ctx.lineWidth = 5;
  ctx.clearRect(dx,dy,dicewidth,diceheight);
  ctx.strokeRect(dx,dy,dicewidth,diceheight)
  var dotx;
  var doty;
  ctx.fillStyle = "#009966";
    switch(n) {
        case 1:
         draw1();
         break;
        case 2:
         draw2();
         break;
        case 3:
         draw2();
         draw1();
         break;
        case 4:
         draw4();
         break;
        case 5:
         draw4();
         draw1();
         break;
        case 6:
         draw4();
         draw2mid();
         break;
         
    }
}
function draw1() {
    var dotx;
    var doty;
    ctx.beginPath();
    dotx = dx + .5*dicewidth;
    doty = dy + .5*diceheight;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
}
function draw2() {
    var dotx;
    var doty;
    ctx.beginPath();
    dotx = dx + 3*dotrad;
    doty = dy + 3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    dotx = dx+dicewidth-3*dotrad;
    doty = dy+diceheight-3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
}
function draw4() {
    var dotx;
    var doty;
    ctx.beginPath();
    dotx = dx + 3*dotrad;
    doty = dy + 3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    dotx = dx+dicewidth-3*dotrad;
    doty = dy+diceheight-3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
    ctx.beginPath();
    dotx = dx + 3*dotrad;
    doty = dy + diceheight-3*dotrad;  //no change
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    dotx = dx+dicewidth-3*dotrad;
    doty = dy+ 3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill(); 
}
function draw2mid() {
    var dotx;
    var doty;
    ctx.beginPath();
    dotx = dx + 3*dotrad;
    doty = dy + .5*diceheight;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    dotx = dx+dicewidth-3*dotrad;
    doty = dy + .5*diceheight; //no change
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
}
// ]]&gt;&lt;/script&gt;
&lt;p&gt;&lt;canvas height="300" id="canvas" width="400"&gt; Your browser doesn't support the HTML5 element canvas. &lt;/canvas&gt; &lt;br&gt; &lt;button onclick="throwdice();"&gt;Throw dice &lt;/button&gt;&lt;/p&gt;
&lt;form id="f" name="f"&gt;Stage: &lt;input name="stage" type="text" value="First Throw"&gt; Point: &lt;input name="pv" type="text" value="   "&gt; Outcome: &lt;input name="outcome" type="text" value="     "&gt;&lt;/form&gt;</pre>
<h2>繪圖</h2>
<p><canvas height="300" id="canvas" width="400"> Your browser doesn't support the HTML5 element canvas. </canvas></p>
<script>
canvas = document.getElementById("canvas");
ctx = canvas.getContext('2d');
 
function draw(){
 ctx.beginPath();
 ctx.strokeStyle = "rgb(200,0,0)";
 ctx.arc(200, 200,50,0,2*Math.PI, false);
 ctx.closePath();
 ctx.stroke();
}
 
function clear_canvas(){
// Store the current transformation matrix
// The save() method pushes the current state onto the stack..
ctx.save();
 
// Use the identity matrix while clearing the canvas
// the setTransform() method lets you scale, rotate, move, and skew the current context.
// setTransform(Horizontal scaling, Horizontal skewing,Vertical skewing, Vertical scaling, Horizontal moving, Vertical moving)
ctx.setTransform(1, 0, 0, 1, 0, 0);
ctx.clearRect(0, 0, canvas.width, canvas.height);
// Restore the transform
// The restore() method pops the top state on the stack, restoring the context to that state.
ctx.restore();
}
</script>
<p><button onclick="draw()">繪圖</button> <button onclick="clear_canvas()">清除</button></p>
<p>上述以 Html5 Canvas 繪圖的程式碼:</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;p&gt;&lt;canvas height="300" id="canvas" width="400"&gt; Your browser doesn't support the HTML5 element canvas. &lt;/canvas&gt;&lt;/p&gt;
&lt;script&gt;
canvas = document.getElementById("canvas");
ctx = canvas.getContext('2d');
 
function draw(){
 ctx.beginPath();
 ctx.strokeStyle = "rgb(200,0,0)";
 ctx.arc(200, 200,50,0,2*Math.PI, false);
 ctx.closePath();
 ctx.stroke();
}
 
function clear_canvas(){
// Store the current transformation matrix
// The save() method pushes the current state onto the stack..
ctx.save();
 
// Use the identity matrix while clearing the canvas
// the setTransform() method lets you scale, rotate, move, and skew the current context.
// setTransform(Horizontal scaling, Horizontal skewing,Vertical skewing, Vertical scaling, Horizontal moving, Vertical moving)
ctx.setTransform(1, 0, 0, 1, 0, 0);
ctx.clearRect(0, 0, canvas.width, canvas.height);
// Restore the transform
// The restore() method pops the top state on the stack, restoring the context to that state.
ctx.restore();
}
&lt;/script&gt;
&lt;p&gt;&lt;button onclick="draw()"&gt;繪圖&lt;/button&gt; &lt;button onclick="clear_canvas()"&gt;清除&lt;/button&gt;&lt;/p&gt;</pre>
<p></p>
<h1>格式化隨身碟</h1>
<p>在week15及week16內容哩，我們要將<span>Ubuntu 虛擬主機檔案(大約8GB)放入隨身碟當中，但我們預設的隨身碟格式為FAT32，而這個格式能容納的最大單一檔案大小為<span lang="EN-US">大約為</span><span lang="EN-US">4GB，因此我們必須將隨身碟格式化，以便我們放入Ubuntu虛擬主機檔案，下面將為大家介紹如何格式化隨身碟以及不同格式系統的隨身碟比較。</span></span></p>
<p>找到自己的隨身碟，點擊右鍵後選取&lt;格式化&gt;</p>
<p><span><span lang="EN-US"><img alt="" height="666" src="/images/1sSiuiuYcG.png" width="300"/></span></span></p>
<p><span><span lang="EN-US">選擇格式化之後的檔案系統，設定完成後點擊開始並等待格式化完成即可</span></span></p>
<p><span><span lang="EN-US"><img alt="" height="525" src="/images/explorer_Ju5YNgL3N3.png" width="300"/></span></span></p>
<p><span><span lang="EN-US">以下為不同的格式化檔案系統的差別以及相容性差異</span></span></p>
<p><span><span lang="EN-US"><img alt="" height="375" src="/images/chrome_5ncaUe3lZb.png" width="700"/></span></span></p>
<h1>ROC flag</h1>
<p><strong><span style="color: #ff0000;"><span style="color: #800080;">注意事項</span>:需將w5 or w13資料夾裡自己倉儲的flaskapp.py檔案進行修改，國旗才可顯示出來。</span></strong></p>
<p><span style="color: #ff0000;"><strong><span style="color: #800080;">修改後錯誤</span>:修改後利用Edit All進行編輯，編輯完成並點擊save按鈕時，會顯示錯誤。</strong></span></p>
<p><strong><span style="color: #800080;"><span>★:<span style="color: #ff0000;">可利用git clone的方式，將cmsimfly最新的版本資料clone下來，並將除了.git、config、content、download、images以及README.md以外的檔案蓋過自己的倉儲資料夾，在進行edit all並save時，即可成功儲存。</span></span></span></strong></p>
<p><strong><span style="color: #ff0000;"><span>def savePage() 的修改</span></span></strong></p>
<p><strong><span></span></strong></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">def savePage():
    """save all pages function"""
    page_content = request.form['page_content']
    # when element_format : "html", need to remove the annoying comment to prevent brython exec
    page_content = [w.replace('// &lt;![CDATA[', '') for w in page_content]
    page_content = [w.replace('// ]]&gt;', '') for w in page_content]
    # check if administrator
......</pre>
<p><strong><span style="color: #ff0000;"><span>def ssavePage() 的修改</span></span></strong></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">def ssavePage():
    """seperate save page function"""
    page_content = request.form['page_content']
    # when element_format : "html", need to remove the annoying comment to prevent brython exec
    page_content = page_content.replace('// &lt;![CDATA[', '')
    page_content = page_content.replace('// ]]&gt;', '')
    page_order = request.form['page_order']
    if not isAdmin():
......</pre>
<p><strong><span style="color: #ff0000;"><span> </span></span></strong></p>
<!-- 導入 Brython 標準程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<p></p>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
</script>
<p><canvas height="400" id="plotarea" width="600"></canvas></p>
<script type="text/python">
# 導入 doc
from browser import document as doc
import math

# 準備繪圖畫布
canvas = doc["plotarea"]
ctx = canvas.getContext("2d")
# 進行座標轉換, x 軸不變, y 軸反向且移動 canvas.height 單位光點
# ctx.setTransform(1, 0, 0, -1, 0, canvas.height)
# 以下採用 canvas 原始座標繪圖
flag_w = canvas.width
flag_h = canvas.height
circle_x = flag_w/4
circle_y = flag_h/4
# 先畫滿地紅
ctx.fillStyle='rgb(255, 0, 0)'
ctx.fillRect(0,0,flag_w,flag_h)
# 再畫青天
ctx.fillStyle='rgb(0, 0, 150)'
ctx.fillRect(0,0,flag_w/2,flag_h/2)
# 畫十二道光芒白日
ctx.beginPath()
star_radius = flag_w/8
angle = 0
for i in range(24):
    angle += 5*math.pi*2/12
    toX = circle_x + math.cos(angle)*star_radius
    toY = circle_y + math.sin(angle)*star_radius
    # 只有 i 為 0 時移動到 toX, toY, 其餘都進行 lineTo
    if (i):
        ctx.lineTo(toX, toY)
    else:
        ctx.moveTo(toX, toY)
ctx.closePath()
# 將填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
# 白日:藍圈
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w*17/240, 0, math.pi*2, True)
ctx.closePath()
# 填色設為藍色
ctx.fillStyle = 'rgb(0, 0, 149)'
ctx.fill()
# 白日:白心
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w/16, 0, math.pi*2, True)
ctx.closePath()
# 填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
</script>
<p><canvas height="400" id="plotarea2" width="600"></canvas></p>
<script type="text/python">
# 導入 doc
from browser import document as doc
import math

# 準備繪圖畫布
canvas = doc["plotarea2"]
ctx = canvas.getContext("2d")
# 進行座標轉換, x 軸不變, y 軸反向且移動 canvas.height 單位光點
# ctx.setTransform(1, 0, 0, -1, 0, canvas.height)
# 以下採用 canvas 原始座標繪圖
flag_w = canvas.width
flag_h = canvas.height
circle_x = flag_w/4
circle_y = flag_h/4
# 先畫滿地紅
ctx.fillStyle='rgb(200, 55, 0)'
ctx.fillRect(0,0,flag_w,flag_h)
# 再畫青天
ctx.fillStyle='rgb(0, 0, 150)'
ctx.fillRect(0,0,flag_w/2,flag_h/2)
# 畫十二道光芒白日
ctx.beginPath()
star_radius = flag_w/8
angle = 0
for i in range(24):
    angle += 5*math.pi*2/12
    toX = circle_x + math.cos(angle)*star_radius
    toY = circle_y + math.sin(angle)*star_radius
    # 只有 i 為 0 時移動到 toX, toY, 其餘都進行 lineTo
    if (i):
        ctx.lineTo(toX, toY)
    else:
        ctx.moveTo(toX, toY)
ctx.closePath()
# 將填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
# 白日:藍圈
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w*17/240, 0, math.pi*2, True)
ctx.closePath()
# 填色設為藍色
ctx.fillStyle = 'rgb(0, 0, 149)'
ctx.fill()
# 白日:白心
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w/16, 0, math.pi*2, True)
ctx.closePath()
# 填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
</script>
<p><canvas height="400" id="plotarea3" width="600"></canvas></p>
<p>國旗程式碼</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 導入 Brython 標準程式庫 --&gt;
&lt;script src="/static/brython.js"&gt;&lt;/script&gt;
&lt;script src="/static/brython_stdlib.js"&gt;&lt;/script&gt;
&lt;p&gt;&lt;/p&gt;
&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;// &lt;![CDATA[
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
// ]]&gt;&lt;/script&gt;
&lt;p&gt;&lt;canvas height="400" id="plotarea" width="600"&gt;&lt;/canvas&gt;&lt;/p&gt;
&lt;script type="text/python"&gt;// &lt;![CDATA[
# 導入 doc
from browser import document as doc
import math

# 準備繪圖畫布
canvas = doc["plotarea"]
ctx = canvas.getContext("2d")
# 進行座標轉換, x 軸不變, y 軸反向且移動 canvas.height 單位光點
# ctx.setTransform(1, 0, 0, -1, 0, canvas.height)
# 以下採用 canvas 原始座標繪圖
flag_w = canvas.width
flag_h = canvas.height
circle_x = flag_w/4
circle_y = flag_h/4
# 先畫滿地紅
ctx.fillStyle='rgb(255, 0, 0)'
ctx.fillRect(0,0,flag_w,flag_h)
# 再畫青天
ctx.fillStyle='rgb(0, 0, 150)'
ctx.fillRect(0,0,flag_w/2,flag_h/2)
# 畫十二道光芒白日
ctx.beginPath()
star_radius = flag_w/8
angle = 0
for i in range(24):
    angle += 5*math.pi*2/12
    toX = circle_x + math.cos(angle)*star_radius
    toY = circle_y + math.sin(angle)*star_radius
    # 只有 i 為 0 時移動到 toX, toY, 其餘都進行 lineTo
    if (i):
        ctx.lineTo(toX, toY)
    else:
        ctx.moveTo(toX, toY)
ctx.closePath()
# 將填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
# 白日:藍圈
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w*17/240, 0, math.pi*2, True)
ctx.closePath()
# 填色設為藍色
ctx.fillStyle = 'rgb(0, 0, 149)'
ctx.fill()
# 白日:白心
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w/16, 0, math.pi*2, True)
ctx.closePath()
# 填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
// ]]&gt;&lt;/script&gt;</pre>
<p></p>
<p></p>
<script type="text/python">
# 導入 doc
from browser import document as doc
import math

# 準備繪圖畫布
canvas = doc["plotarea3"]
ctx = canvas.getContext("2d")
def blueWhite(ctx, x, y, flag_w, flag_h):
    # 再畫青天
    ctx.fillStyle='rgb(0, 0, 150)'
    #ctx.fillRect(x-flag_w/4, y-flag_h/4, flag_w/2, flag_h/2)
    ctx.fillRect(x-flag_w/2, 0, flag_w/2, flag_h)
    # 畫十二道光芒白日
    ctx.beginPath()
    star_radius = flag_w/8
    angle = 0
    for i in range(24):
        angle += 5*math.pi*2/12
        toX = x + math.cos(angle)*star_radius
        toY = y + math.sin(angle)*star_radius
        # 只有 i 為 0 時移動到 toX, toY, 其餘都進行 lineTo
        if (i):
            ctx.lineTo(toX, toY)
        else:
            ctx.moveTo(toX, toY)
    ctx.closePath()
    # 將填色設為白色
    ctx.fillStyle = '#fff'
    ctx.fill()
    # 白日:藍圈
    ctx.beginPath()
    ctx.arc(x, y, flag_w*17/240, 0, math.pi*2, True)
    ctx.closePath()
    # 填色設為藍色
    ctx.fillStyle = 'rgb(0, 0, 149)'
    ctx.fill()
    # 白日:白心
    ctx.beginPath()
    ctx.arc(x, y, flag_w/16, 0, math.pi*2, True)
    ctx.closePath()
    # 填色設為白色
    ctx.fillStyle = '#fff'
    ctx.fill()
# 進行座標轉換, x 軸不變, y 軸反向且移動 canvas.height 單位光點
# ctx.setTransform(1, 0, 0, -1, 0, canvas.height)
# 以下採用 canvas 原始座標繪圖
flag_w = canvas.width
flag_h = canvas.height
circle_x = flag_w/2
circle_y = flag_h/2
# 先畫滿地紅
ctx.fillStyle='rgb(255, 0, 0)'
ctx.fillRect(0,0,flag_w,flag_h)
blueWhite(ctx, circle_x, circle_y, flag_w, flag_h)
</script>
<h1>網際內容管理課程內容</h1>
<p>因為w1到期中所教學的內容和w10到期末的教學內容有差異</p>
<p>w1~w9主要教學內容:github倉儲建立、CMSimfly網頁開發、配置、改版</p>
<p>w10~w16主要教學內容:虛擬主機安裝及設定、複習先前教學內容</p>
<p>因此將內容主要分成幾個分支:1.w1~w9   2.每個星期的教學內容</p>
<p>期中報告及期末報告則會另外顯示</p>
<h2>w1~w9</h2>
<p><span>w1~w9主要教學內容:github倉儲建立、CMSimfly網頁開發、配置、改版</span></p>
<p><span>除了ssh連線以及key設定另外拍成影片以外，其他建立倉儲、開啟動態網頁及改版，皆會拍成影片</span></p>
<h3>建立github倉儲</h3>
<p>本影片介紹如何建立github倉儲，從建立github帳號、建立倉儲，到倉儲設定，都可在影片內看到。</p>
<p>步驟:</p>
<p>1.登入github帳號-點擊新增倉儲(repository)-設為公開-命名，建立完成</p>
<p>2.利用git clone指令將新創的倉儲及示範倉儲(cmsimfly)倉儲內容clone到可攜式系統裡的tmp資料夾</p>
<p>指令:git clone + 倉儲網址.git</p>
<p>3.倉儲內setting裡的Github Pages選項:需將Source由None更改成master branch</p>
<p>4.利用指令git add .、git commit -m ""、git push改版。</p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="506" src="https://www.youtube.com/embed/_q4nU-4M_BI" width="900"></iframe></p>
<h3>開啟動態網頁並進行改版</h3>
<p>建立好倉儲以及設定完成後，可利用指令python wsgi.py來開啟動態網頁，在藉由登入後，即可進行編輯網頁動作，注意:每一次的改版皆必須利用指令git add .、git commit -m ""、git push，來進行push的動作</p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="506" src="https://www.youtube.com/embed/hIG-yes-qEQ" width="900"></iframe></p>
<h3>PUSH及KEY設定</h3>
<p><strong><span style="color: #ff0000;">關閉操作系統儲存 Github 帳號密碼設定</span></strong><br/><br/><span>目前 KMOL 所使用的 PortableGIT, 內建設定的 credential helper 為 manger, 表示當使用者使用 git push 時內建會跳出讓使用者輸入帳號密碼的對話視窗, 以讓使用者輸入帳號密碼</span><br/><br/><span>我們可使用:</span><span><strong><span style="color: #ff0000;">git config --edit --system</span></strong>指令</span><br/><br/><span>帶出 vi 編輯器, 編輯 git 指令所使用的系統設定, 只要將 credential 項目中的 helper = manager 刪除後儲存, 即可關閉內定將使用者 Github 帳號密碼儲存於操作系統的問題.</span></p>
<p><span>示範影片如下:</span></p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="506" src="https://www.youtube.com/embed/kW0FOIxfbbI" width="900"></iframe></p>
<p><span></span></p>
<p><strong><span style="color: #ff0000;">建立OPENSSH格式的KEY及設定</span></strong></p>
<p><span>在可攜系統的命令列視窗中, 以 sh 執行 Git 的 shell, 使用<br/><br/><br/><span>ssh-keygen -t rsa -b 4096 -C "This is my key"</span><br/><br/><span>建立位於 y:\home\.ssh\id_rsa 的 Private Key 與位於 y:\home\.ssh\id_rsa.pub 的 Public Key, 並且將 id_rsa.pub 的內容, 轉貼到 Github 帳號 settings 中 SSH and GPG keys 項目內的 SSH Public Key 區.</span></span></p>
<p>key成功建立以及設定之後，回到自己的github網站並在clone or download裡選擇USE SSH，複製後再可攜式系統裡進行git clone，待畫面顯示done即完成，之後將倉儲資料夾裡.ssh中的config檔案開啟，並將url選項改成ssh，即完成。</p>
<p><img alt="" height="338" src="/images/github.com.png" width="600"/></p>
<p><img alt="" height="301" src="/images/chrome_SnDiNOCcXF.png" width="500"/></p>
<p><img alt="" height="313" src="/images/cmd_MVIAlqZvW8.png" width="600"/></p>
<p><img alt="" height="218" src="/images/SciTE_kdp8rX7ZSc.png" width="600"/></p>
<p><span><span>ssh 連線透過 proxy server, 必須設定 y:\home\.ssh\config 如下:</span></span></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">ProxyCommand y:/PortableGit/mingw64/bin/connect.exe -H proxy.kmol.info:3128 %h %p
  
# for user1
# url = git@github.com_user1:user1/cmstest.git
Host github.com_user1
    User git
    Port 22
    Hostname github.com
  
    IdentityFile "y:\home\.ssh\id_rsa_user1"
  
    TCPKeepAlive yes
    IdentitiesOnly yes
      
# for user2
# url = git@github.com_user2:user2/user2.com.git
Host github.com_user2
    Port 22
    Hostname github.com
  
    IdentityFile "y:\home\.ssh\id_rsa_user2"
  
    TCPKeepAlive yes
    IdentitiesOnly yes</pre>
<p>示範影片如下:<br/><br/></p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="506" src="https://www.youtube.com/embed/KHRf3T2gJsM" width="943"></iframe></p>
<h3>week_8</h3>
<p><strong>電腦初學者的網際內容管理</strong></p>
<p><em><strong><span style="color: #ff0000;">week9網管期中影片部分即在講解下列步驟，對於下面步驟不理解可轉移至week9的內容觀看。</span></strong></em></p>
<div class="post-header">
<div class="post-header-line-1"></div>
</div>
<div class="post-body entry-content" id="post-body-8100707464249811474" itemprop="description articleBody"><span style="color: #000000; background-color: #00ff00;">第一步</span><br/><span><br/></span><span>網路連線設定</span><br/><br/>了解機械設計系電腦輔助設計室電腦的網路設定, 其中包括 IPv4 網路與 IPv6 網路設定.<br/><br/>正常情況下, 電腦輔助設計室中的 64 台電腦透過 IPv4 協定下的 DHCP 與 NAT 上網, 各電腦以 DHCP client 取得 192.168.1.* 的網路位址, 然後以 NAT 的一組外部 IP 上網, 通常必須設定 Proxy Server 為 http://proxy.kmol.info:3128 後上網會比較順暢, 但若 8 台 Proxy Servers 無法正常運作時, 則取消 Proxy Server 的設定.<br/><br/><span>瀏覽器代理主機設定</span><br/><br/>了解如何設定 Google Chrome 與 Firefox 瀏覽器的代理主機設定.<br/><br/><span>申請 Github 帳號</span><br/><br/>利用 Gmail 帳號申請 Github 帳號, 申請後利用電子郵箱收信進行確認後, 就可以在 Github 上建立倉儲.<br/><br/><span style="background-color: #00ff00; color: #000000;">第二步</span><br/><br/><span>配置可攜程式環境</span><br/><br/>取得 Windows 10 64 位元環境下的可攜程式環境 (<a href="https://drive.google.com/open?id=1_TQBw1PM7jxrmtsBjvLKbjJWfGs8Ug79">下載  2019_cdb_w5.7z</a>), 下載後解開目錄, 放入 USB3.0 規格以上的隨身碟或隨身硬碟.<br/><br/>以滑鼠點擊 start.bat 開啟可攜隨身系統, 以 stop.bat 關閉可攜隨身系統, 隨身碟必須在關閉所有應用程式執行下, 才可正常退出.<br/><br/>了解基本的 DOS (Disk Operating System) 指令<br/><br/>C:\&gt; 符號為 DOS 命令列視窗的回應 (Prompt), 表示目前在 C 槽硬碟的 \ 根目錄, 若要切換到 Y 槽, 則在電腦的回應後, 輸入 Y:, 命令列將轉為<br/><br/>Y:\&gt;<br/><br/>若要更換目錄, 則使用 cd, 也就是 change directory 的意思, 例如:<br/><br/>Y:\&gt;cd tmp<br/><br/>表示要從 Y 槽的根目錄更換到 tmp 目錄, 也就是<br/><br/>Y:\tmp&gt;<br/><br/>若要再回到 Y 槽的根目錄, 可以使用 cd ..<br/><br/>表示要從目前所在目錄, 往上跳回一個目錄, 也就是重新回到 Y 槽的根目錄.<br/><br/>另外, 無論目前位於哪一個子目錄, 也可以使用 cd \<br/><br/>直接回到根目錄.<br/><br/>或者從 Y:\&gt; 直接使用<br/><br/>cd \tmp\repo\ssh\wcm2019<br/><br/>直接從 Y 槽的根目錄, 跳進 Y:\tmp\repo\ssh\wcm2019&gt;<br/><br/>此外, 常用的 DOS 指令有:<br/><br/>dir - 列出目前所在目錄的內容<br/><br/>mkdir - 隨後加上要建立目錄的名稱, 可以建立目錄<br/><br/>cls - clear screen, 清除目前的命令列顯示的內容<br/><br/><span style="color: #000000; background-color: #00ff00;">第三步</span><br/><br/><span>建立 Git 倉儲, 並 clone 倉儲至近端工作後, 對遠端倉儲改版</span><br/><span><br/></span>可攜程式系統中已經內建 git, 可以在啟動 start.bat 後, 透過 path 的設定, 直接執行 git 指令.<br/><br/>建立 Git 倉儲, 共分為兩類, 一類是直接在 Github 網際介面下建立倉儲時, 要求建立 README.md 檔案, 之後可以直接在近端, 以 git clone 加上倉儲連線 URL, 將倉儲克隆一份到近端, 並以最新版本作為工作目錄, 使用者改版後, 可以直接透過 git add, commit 與 push 對遠端倉儲改版.<br/><br/>另一類則是故意在 Github 網際介面下建立倉儲時, 不要建立任何檔案, 而是在近端自行利用 git 指令建立倉儲架構, 新增內容後, 以 git remote add 設法在近端倉儲中納入 origin URL 後, 將近端倉儲版本新增提交推送到遠端.<br/><br/><span>git add</span><br/><br/>git add 可以用來新增一個檔案, 數個檔案, 或在之前提交後所新增的所有內容.<br/><br/>git add 在 GIT 架構下, 是對所新增或修改的內容拍快照:<br/><br/>
<blockquote class="tr_bq">git add . adds all modified and new (untracked) files in the current directory and all subdirectories to the staging area (a.k.a. the index), thus preparing them to be included in the next git commit . Any files matching the patterns in the .gitignore file will be ignored by git add</blockquote>
<br/><span>git commit </span><br/><br/>git commit 執行之前, 必須使用 git config 建立臨時或永久的身分註記, 因為 GIT 在展開所有改版內容時, 必須明確登錄這些變更的作者與時間.<br/><br/>當使用者採用 git commit -m "改版說明訊息", 此次提交到 .git 目錄下的更動內容, 均會綁定使用者身分與改版所輸入的說明訊息.<br/><br/><span>git push</span><br/><br/>git push 在隨後沒有輸入遠端 URL 代號時, 表示要推送到 origin, 若透過 git remote add 設定其他代號與 URL 對應時, git push 加上代號, 就可以將此次的提交內容, 推送到指定的 URL 所在遠端倉儲.<br/><br/><span style="color: #000000; background-color: #00ff00;">第四步</span><br/><span><br/></span><span>自行建立靜態內容管理網站</span><br/><br/>利用 CMSimfly (<a href="https://github.com/chiamingyen/cmsimfly">https://github.com/chiamingyen/cmsimfly</a>) 內容, 建立自己的<span> </span><a href="https://pages.github.com/">Github Pages</a><span> </span>網站<br/><br/><span style="color: #000000; background-color: #00ff00;">第五步</span><br/><span><br/></span><span>管理網站內容</span><br/><br/>學習如何使用 CMSimfly, 在網站中加入各種內容<br/><br/><span style="color: #000000; background-color: #00ff00;">第六步</span><br/><span><br/></span><span>使用 Flask, bs4 與 lxml 模組</span><br/><br/>了解 CMSimfly 如何建構, 並且嘗試修改現有功能, 除錯或建立自己的網際內容管理系統</div>
<div class="post-body entry-content" itemprop="description articleBody"></div>
<p><br/><strong><strong>進階內容<strong></strong><br/><br/><span style="color: #000000; background-color: #00ff00;">第七步</span><br/><span><br/></span><span>虛擬主機下的類 Github 網站</span><br/><br/>如何利用<span> </span><a href="https://www.fossil-scm.org/">Fossil SCM</a>, 在<span> </span><a href="https://www.virtualbox.org/">Virtualbox</a><span> </span>中的<span> </span><a href="https://drive.google.com/open?id=1yjWQ5e6AGaio2ZvclONKEwIfSMtY2gSz">Ubuntu 18.04-2</a> (8.5 GB) 建立類似 Github 的系統, 可以放入 CMSimfly 的靜態網頁<br/><br/><span style="color: #000000; background-color: #00ff00;">第八步</span><br/><span><br/></span><span>實體主機下的網際內容管理</span><br/><br/>如何在實體主機上安裝<span> </span><a href="https://www.ubuntu.com/">Ubuntu</a><span> </span>18.04 (<a href="https://www.ubuntu.com/about/release-cycle">https://www.ubuntu.com/about/release-cycle</a>), 配置網路連線, 然後架構<span> </span><a href="https://uwsgi-docs.readthedocs.io/en/latest/WSGIquickstart.html">uwsgi</a><span> </span>環境下的 CMSimfly 動態網站, 或建立 Fossil SCM 用來伺服管理 CMSimfly 下有版次管理的靜態網頁, 或利用<span> </span><a href="https://nginx.org/en/">nginx</a><span> </span>伺服無版次管理的 CMSimfly 靜態網頁.</strong></strong></p>
<h3>圖形化Git工具</h3>
<p>在我們進行改版時，除了利用手動輸入指令來進行git push之外，也可利用ungit的方式來進行改版</p>
<p>我們只需要在可攜式系統內切換到自己倉儲，並輸入&lt;kungit&gt;指令，瀏覽器就會跳出網頁。輸入完改版標題後，點選commit&amp;push ，即可完成改版。</p>
<p><img alt="" height="322" src="/images/chrome_c3OA9E0etR.png" width="600"/></p>
<p>另外也可以使用w5或w13下載下來的資料夾裡面的GitExtensions程式來進行改版，而未來如果需要將版本更改回過去的任何一個舊版本，也可利用此程式來進行。</p>
<p><img alt="" height="293" src="/images/chrome_FogtUJ4j0x.png" width="600"/></p>
<h2>week_10</h2>
<div class="post-header">
<div class="post-header-line-1"></div>
</div>
<div class="post-body entry-content" id="post-body-3542992953483152816" itemprop="description articleBody"><span style="background-color: #ff9900;"><strong><span style="color: #000000;">Virtualbox 虛擬主機網路設定</span></strong></span><br/><br/><br/><strong><span style="color: #000000; background-color: #00ccff;">Not Attached</span></strong><br/><br/>當使用者需要模擬虛擬主機的網路卡連接線被拔除的情況時, 可將該虛擬主機的網路卡以 Not Attached 模式設定.<br/><br/><strong><span style="color: #000000; background-color: #00ccff;">NAT</span></strong><br/><span><br/></span><span>當使用者只需要讓虛擬主機能夠上網, 下載檔案或登入電子郵箱時, 可以將虛擬主機的網路卡以 NAT 模式設定. 在 NAT 模式下, 只有 ping 能夠運作, tracert 與其他與 ICMP 、VPN 或 PPTP 等協定對應的功能都將會失效.</span><br/><br/><strong><span style="color: #000000; background-color: #00ccff;">NAT  Network</span></strong><br/><br/>NAT Network 與 NAT 類似, 但使用者可以透過 File-Preferences-Network 新增多個 NAT Network, 並選擇所要使用的網段與 DHCP 或是否支援 IPv6 等設定.<br/><br/><strong><span style="color: #000000; background-color: #00ccff;">Bridged Adapter<span style="color: #ff0000; background-color: #ffffff;">(在校主要使用選項)</span></span></strong></div>
<div class="post-body entry-content" itemprop="description articleBody"><span><strong><span style="color: #ff0000;">在校確認連接到網路後，開啟控制台查看所連接網路的名稱，並在設定當中選擇正確的名稱。</span></strong><br/></span><span>當使用者需要利用虛擬主機建立與 Host 位階相同的網路模式時, 可以將虛擬主機的網卡設訂為 Bridged Adapter.</span><br/><br/><strong><span style="background-color: #00ccff; color: #000000;">Internal Network</span></strong><br/><br/>當使用者需要讓虛擬主機設定為 <a href="https://en.wikipedia.org/wiki/Software-defined_networking">https://en.wikipedia.org/wiki/Software-defined_networking</a> 時, 可以將網路卡設為可透過軟體調控的網路模式.<br/><br/><strong><span style="background-color: #00ccff; color: #000000;">Host-only Adapter</span></strong><br/><span><br/></span><span>當使用者只需要讓虛擬主機與 Host 電腦連線時, 可以將網卡設為 Host-only Adapter, 此一模式的使用時機可以在虛擬主機中配置 WWW 伺服器、應用程式伺服器、Fossil SCM 伺服器, 然後透過 Host 上的瀏覽器進行連線測試, 或者在虛擬主機上安裝特定軟體套件的認證主機, 以便讓 Host 中的軟體套件透過虛擬主機執行授權認證.</span><br/><br/><strong><span style="background-color: #00ccff; color: #000000;">參考 vdi:</span></strong><br/><br/>位於雲端的<span> </span><a href="https://drive.google.com/file/d/1bSBdEPVn6IG22cVLpTbY97JY16vjlatz/view?usp=sharing">Ubuntu 18.04_201904.vdi</a><span> </span>(約 9 GB) - 已經配置 Fossil SCM: https 5443, Host-only: 192.168.56.2, https: 443 and 8843 for CMSimfly, Squid Proxy Server.<br/><br/>假如要利用 USB 隨身碟存放上述約 9 GB 的 Ubuntu 18.04 vdi 檔案, 必須將隨身碟格式化為 NTFS, 若採 Fat32 格式, 最大單一檔案必須小於 4 GB.<br/><br/>另外在近端有一類似的檔案, 可提供上課學員下載:<br/><br/><a href="http://wcmg1.kmol.info:88/ub1804_nox.vdi">http://wcmg1.kmol.info:88/ub1804_nox.vdi</a><span> </span>(僅限近端用戶使用 IPv6 協定者下載)<br/><br/><br/></div>
<h2>week_12</h2>
<p>本週內容:</p>
<p>透過整理內容來確認是否已經了解如何更新cmsimfly網頁以及改版</p>
<p>並介紹從此週到期末主要教學方向</p>
<h3>網管課程任務</h3>
<p><strong><span style="color: #ff0000;">期末報告類別</span></strong><br/><br/>最後的期末報告主要分為下列兩項</p>
<ol>
<li><strong><span style="background-color: #ffcc99; color: #000000;">持續強化網際內容與系統的可用性(CMSimfly網頁)</span></strong></li>
<li><strong><span style="background-color: #ffcc99; color: #000000;">深入了解網際內容管理系統的配置環境(VirtualBox)</span></strong></li>
</ol>
<p><span></span><span style="color: #ff0000;"><strong>持續強化網際內容與系統的可用</strong></span></p>
<p>將更多適合的內容嵌入個人cmsimfly網頁，並在最後的期末報告表達出來<br/><strong><span style="color: #ff0000;"></span></strong></p>
<p><strong><span style="color: #ff0000;">深入了解網際內容管理系統的配置環環境</span></strong></p>
<p><strong><span style="color: #ff0000;"></span></strong>利用 Virtualbox 中的 Ubuntu 操作系統, 配置一套可以動態啟動的虛擬網際內容管理系統, 並學習如何在虛擬操作系統與實體操作系統中配置 CMSimfly 網際內容管理系統。</p>
<h3>網管課程整理</h3>
<p><span style="background-color: #ffff99; color: #000000;">2019 Spring 網際內容管理課程</span><br/><br/><strong><span style="color: #ff0000;">1. 是否已經在自己的隨身碟建立隨身程式系統?</span></strong><br/><br/><span>此一隨身系統以</span><a href="https://drive.google.com/open?id=1_TQBw1PM7jxrmtsBjvLKbjJWfGs8Ug79"><span> </span>2019_cdb_w5.7z</a><span><span> </span>為基礎, 使用者必須會自行查驗</span><br/><br/><span>    是否已經將 portablegit 中的 helper = manager 的設定移除?</span><br/><span>     python 是否已經安裝 flask, bs4 與 lxml 模組?</span><br/><span>    (1)是否了解 git 以 https 連線時, proxy 將採用那一個檔案中的設定?</span><br/><span>    (2)是否已經學會如何採用 ssh 模式維護 github 上的倉儲?</span><br/><span>    (3)是否了解 CMSimfly 動態與靜態系統之間的關係?</span><br/><span>    (4)是否會在 CMSimfly 中上傳檔案, 引用檔案?</span><br/><span>    (5)是否會在 CMsimfly 中上傳圖檔, 引用圖檔?</span><br/><span>    (6)是否會在 CMSimfly 中嵌入 Youtube 影片?</span><br/><span>    (7)是否會在 CMSimfly 頁面中加入 Javascript 互動程式?</span><br/><span>    (8)是否會更改 CMsimfly 靜態系統所使用的模板?</span><br/><span>    (9)是否能將 USB 隨身碟格式為 NTFS 或 extFAT, 以便放入 Ubuntu 虛擬主機檔案?</span><br/><span>    (10)是否會使用自己隨身碟中的 Virtualbox 與 Ubuntu 中的 Fossil SCM 來伺服靜態 CMSimfly 檔案?</span><br/><span>    (11)是否會使用自己隨身碟中的 Virtualbox 與 Ubuntu 中的 uwsgi 來伺服動態 CMSimfly 系統?</span><br/><br/><strong><span style="color: #ff0000;">2. 是否已經根據各上述階段任務的操作拍成說明影片, 嵌入自己的 Github Pages 網站?</span></strong><br/><br/><br/></p>
<h2>week_13</h2>
<p>本周內容:和同學們清楚說明w4-w13從創立github帳號、github Pages、網路設定、相關指令應用......等內容。相關內容將於本網頁的<span style="color: #ff0000;"><strong>近端配置與管理(網管)</strong></span>頁面與大家介紹，感謝。</p>
<h2>week_14</h2>
<p>本周內容:將<a href="http://mde.tw/wcm2019/content/ROC%20flag.html">http://mde.tw/wcm2019/content/ROC%20flag.html</a>的國旗標誌加入自己的網頁<strong><span style="color: #ff0000;">(已新增在分頁:ROC Flag)</span></strong></p>
<p><span style="color: #800080;"><strong>注意事項:</strong></span></p>
<p><span style="color: #ff0000;"><strong>需將w5 or w13資料夾裡自己倉儲的flaskapp.py檔案進行修改，國旗才可顯示出來。</strong></span></p>
<p><span style="color: #ff0000;"><strong><span style="color: #800080;">修改後錯誤</span>:修改後利用Edit All進行編輯，編輯完成並點擊save按鈕時，會顯示錯誤。</strong></span></p>
<p><span style="color: #ff0000;"><strong><span style="color: #800080;">★</span>:可利用git clone的方式，將cmsimfly最新的版本資料clone下來，並將除了.git、config、content、download、images以及README.md以外的檔案蓋過自己的倉儲資料夾，在進行edit all並save時，即可成功儲存。</strong></span></p>
<p><strong><span style="color: #ff0000;"></span></strong></p>
<h2>week_15</h2>
<p>本周內容:</p>
<p>1.<span>TWAREN SSL-VPN連線安裝教學</span></p>
<p><span>2.VirtualBox設定教學</span></p>
<p><span>3.下載filezilla，將檔案傳送到虛擬主機資料夾。</span></p>
<p><span>4.介紹可利用學校網站下載校園授權軟體(限校內ip)</span></p>
<h3>filezilla</h3>
<p>filezilla功用:可經由連接到他台主機後傳送檔案至目標主機</p>
<p><a href="https://portableapps.com/apps/internet/filezilla_portable">https://portableapps.com/apps/internet/filezilla_portable</a></p>
<p>進入網頁後下載檔案並且進行安裝。</p>
<p><img alt="" height="346" src="/images/chrome_Luo4Ub5nHB.png" width="600"/></p>
<p>在檔案-站台管理員-新增站台-利用ifconfig查詢虛擬主機的ip位置後將ip新增到主機空格內，並且輸入虛擬主機使用者名稱及密碼，點選連線後即完成。</p>
<p><img alt="" height="488" src="/images/filezilla_IYGkogLrBZ.png" width="600"/></p>
<h3>校園授權軟體</h3>
<p><a class="ac-algo fz-l lh-20 tc d-ib va-mid" data-cc6="5ced4fc3c4b7c" href="https://r.search.yahoo.com/_ylt=AwrtFnbDT.1ccHwAVxBr1gt.;_ylu=X3oDMTEyY2s5cmpuBGNvbG8DdHcxBHBvcwMxBHZ0aWQDQjU1MTlfMQRzZWMDc3I-/RV=2/RE=1559085123/RO=10/RU=https%3a%2f%2fnfucc.nfu.edu.tw%2fzh%2fdownload%2fdownload-service%2f2015-09-22-01-16-07-2/RK=2/RS=87T8soBHUV0nGOhXmbqn_HXZudI-" id="yui_3_10_0_1_1559056324685_210" referrerpolicy="origin" saprocessedanchor="true" target="_blank">校園授權軟體下載專區(限校內IP)</a>，進入網站後登入校務帳號密碼，即可下載免費正版軟體。</p>
<p><img alt="" height="324" src="/images/校園授權網站.png" width="600"/></p>
<h3>VirtualBox</h3>
<p>將virtualbox下載下來後開啟，並提前將ubuntu server下載好</p>
<p>ubuntu下載網址:<a href="https://www.ubuntu.com/download/server">https://www.ubuntu.com/download/server</a></p>
<p><img alt="" height="108" src="/images/virtualbox.png" width="70"/></p>
<p><strong><span style="color: #ff0000;">虛擬主機系統建立</span></strong></p>
<p><img alt="" height="375" src="/images/下載ubuntu.png" width="600"/></p>
<p>將virtualbox開啟之後先進入設定更改網路連接方式，<span style="color: #ff0000;">以網路卡橋接進行連線</span>(下圖連接網路名稱為學校網路)</p>
<p><img alt="" height="448" src="/images/虛擬主機連接方式設定.png" width="600"/></p>
<p>返回首頁並點選新增按鈕新增虛擬主機系統，類型選擇Linux，版本是Ubuntu。並完成其他設定。</p>
<p><img caption="false" height="288" src="/images/VirtualBox01.png" width="500"/></p>
<p><img alt="" height="303" src="/images/VirtualBox02.png" width="300"/><img alt="" height="303" src="/images/VirtualBox03.png" width="300"/><img alt="" height="303" src="/images/VirtualBox04.png" width="300"/><img alt="" height="311" src="/images/VirtualBox05.png" width="300"/><img alt="" height="311" src="/images/VirtualBox06.png" width="300"/><img alt="" height="311" src="/images/VirtualBox07.png" width="300"/></p>
<p><strong><span style="color: #ff0000;">開啟虛擬主機完成設定</span></strong></p>
<p><strong><span style="color: #ff0000;">可利用tab或是方向鍵下來控制項目，enter鍵來決定項目。</span></strong></p>
<p><span style="color: #000000;"><strong>依照上方指示完成後，只剩下虛擬主機系統內的設定。開啟新建立的系統並進行以下設定。</strong></span></p>
<p><span style="color: #000000;"><strong><img caption="false" height="419" src="/images/ubuntu安裝1.png" width="500"/><img alt="" height="417" src="/images/ubuntu安裝2.png" width="500"/><img alt="" height="420" src="/images/ubuntu安裝3.png" width="500"/><img alt="" height="420" src="/images/ubuntu安裝4.png" width="500"/></strong></span></p>
<p><span style="color: #000000;"><strong>以下輸入的proxy網址為當時在學校內所連到的主機伺服器位址。<img alt="" height="420" src="/images/ubuntu安裝5.png" width="500"/><img alt="" height="420" src="/images/ubuntu安裝6.png" width="500"/><img alt="" height="420" src="/images/ubuntu安裝7-1.png" width="500"/><img alt="" height="420" src="/images/ubuntu安裝7-1 (2).png" width="500"/><img alt="" height="420" src="/images/ubuntu安裝7-2.png" width="500"/><img alt="" height="420" src="/images/ubuntu安裝7-3.png" width="500"/><img alt="" height="420" src="/images/ubuntu安裝7-5.png" width="500"/></strong></span></p>
<p><span style="color: #000000;"><strong>這裡輸入的資訊為之後設定完成將虛擬主機開啟後須進行登入的帳號密碼。<img alt="" height="420" src="/images/ubuntu安裝7-6.png" width="500"/><img alt="" height="420" src="/images/ubuntu安裝7.png" width="500"/></strong></span></p>
<p><span style="color: #000000;"><strong>設定完成後等待安裝成功即完成。<img alt="" height="420" src="/images/ubuntu安裝last.png" width="500"/></strong></span></p>
<p><span style="color: #000000;"><strong>啟動虛擬主機並且登入後</strong></span></p>
<p><span style="color: #000000;"><strong>1.利用指令<span><span style="color: #ff0000;">sudo apt install nginx</span> 安裝 nginx WWW 伺服器</span></strong></span></p>
<p><span style="color: #000000;"><strong><span><img alt="" height="420" src="/images/以指令安裝nginx.png" width="500"/></span></strong></span></p>
<p><strong><span style="color: #000000;">2. 利用<span style="color: #ff0000;">ifconfig</span>指令查詢 Ubuntu 伺服器的 IP,在網頁裡輸入網址，測試 nginx 伺服器是否可以連線</span></strong></p>
<p><strong><span style="color: #000000;"><img alt="" height="420" src="/images/ifconfig.png" width="500"/></span></strong></p>
<p><strong><span style="color: #000000;"><img alt="" height="361" src="/images/vituralbox開啟網頁.png" width="600"/><br/></span></strong></p>
<p><strong><span style="color: #000000;">3.<span> 開啟安裝好的filezilla client ，將編輯好的 nginx 設定檔案送到 Ubuntu</span></span></strong></p>
<p><strong><span style="color: #000000;"><span><img alt="" height="477" src="/images/傳送三個檔案.png" width="600"/></span></span></strong></p>
<h3>TWAREN SSL-VPN連線教學</h3>
<p>點擊<strong><a href="https://drive.narlabs.org.tw/navigate/s/8F663EC143514CF295FCB53B5B228956GUY">連結</a></strong>後，選取與自己系統相容的檔案並下載。</p>
<p><img alt="" height="282" src="/images/chrome_BU6QoDjgsm.png" width="600"/></p>
<p>下載下來後執行並安裝</p>
<p><img alt="" height="369" src="/images/chrome_mEAbWrfBAC.png" width="500"/></p>
<p>在搜尋中輸入Network Connect並開啟</p>
<p><img alt="" height="542" src="/images/chrome_D9B3Eh0lPm.png" width="400"/></p>
<p>輸入網址:https://sslvpn.nfu.edu.tw/nfu</p>
<p><img caption="false" height="364" src="/images/dsNetworkConnect_qybJCjmu3J.png" width="400"/></p>
<p>輸入學號及校務行政密碼後登入</p>
<p><img alt="" height="364" src="/images/dsNetworkConnect_M4WVM1vw1d.png" width="400"/></p>
<p>點選是</p>
<p><img alt="" height="366" src="/images/dsNetworkConnect_pvu57Dgcap.png" width="400"/></p>
<p>第三排第二個顯示已連線表示已成功連線。</p>
<p><img caption="false" height="150" src="/images/qHnyv1IUYK.png" width="200"/></p>
<div><span></span></div>
<div><span style="color: #ff0000;">以下內容取自<a href="https://nfucc.nfu.edu.tw/index.php/zh/download/download-network/ssl-vpn" style="color: #ff0000;">https://nfucc.nfu.edu.tw/index.php/zh/download/download-network/ssl-vpn</a></span></div>
<div><span>2-2: IE網認證</span></div>
<blockquote>
<div><span>1.請在IE瀏覽器上按下右鍵 使用"以系統管理員身分執行"</span></div>
<div><span>登入頁面請輸入： <a href="https://sslvpn9.twaren.net/nfu">https://sslvpn9.twaren.net/nfu</a>，輸入校務行政帳號密碼</span><span>進行身份確認。</span><br/><span><span><span></span></span></span></div>
<div><span></span></div>
<div><span><img alt="1" caption="false" src="https://nfucc.nfu.edu.tw/images/image/sslvpn/Web/1.jpg" width="300"/></span></div>
<div><span></span></div>
<div><span><img alt="2" caption="false" height="370" src="https://nfucc.nfu.edu.tw/images/image/sslvpn/Web/2.JPG" width="600"/></span></div>
<div><span></span></div>
<div><span>2.點選「開始」 </span></div>
<div><span><img alt="3" caption="false" height="370" src="https://nfucc.nfu.edu.tw/images/image/sslvpn/Web/3.jpg" width="600"/></span></div>
<div><span>3.點選「是」，SSL VPN程式安裝完畢後，就會開始跟你的電腦建立連線，請稍後一段時間。</span></div>
<div>
<p><span><img alt="5" caption="false" height="370" src="https://nfucc.nfu.edu.tw/images/image/sslvpn/Web/5.jpg" width="600"/></span></p>
</div>
</blockquote>
<div><hr size="2" width="100%"/></div>
<div><span><strong> </strong></span></div>
<blockquote>
<div><span> <strong>5. </strong><strong>VPN</strong><strong>連線建立完成</strong></span></div>
</blockquote>
<blockquote><span>連線建立完成後，在電腦的工作列上(桌面右下角)，會出現 Juniper Network Connect VPN Client的圖示，表示VPN連線已經成功的建立在你的電腦上了。點擊圖示兩下，即可查看連線資訊。<span>(註:指派IP:一定為120.113.100.XX)</span>。</span><br/><span>到此，您的SSL-VPN連線已經成功的建立，不管是在家裡還是出差，您的電腦就像在學校使用一般，您可以自由的使用虎尾科技大學自己擁有的網路資源。</span>
<div><span><img alt="153.png" caption="false" src="https://nfucc.nfu.edu.tw/images/153.png" width="600"/></span></div>
</blockquote>
<div><hr size="2" width="100%"/></div>
<div><span><strong>6. </strong><strong>連線IP檢視</strong>(*)</span></div>
<blockquote>
<div><span>如何得知連線的 IP 究竟是什麼呢？您可透過網際網路上提供 IP 位址偵測服務的網站進行確認，例如 <a href="http://showip.net/" target="_blank" title="Show IP"><span>http://showip.net/</span></a></span></div>
<div><span><img alt="15313.png" caption="false" src="https://nfucc.nfu.edu.tw/images/15313.png" width="600"/></span></div>
</blockquote>
<h2>week_16</h2>
<p>本周內容:<br/>1.利用虛擬主機開啟個人動態網站</p>
<p>2.準備以及整理期末報告影片</p>
<h3>利用虛擬主機開啟動態網站</h3>
<p>下載<a href="https://2019wcm.blogspot.com/">https://2019wcm.blogspot.com/</a>中老師在w15內容裡新增的<span>W15 實作所完成的虛擬主機 <a href="https://drive.google.com/file/d/1l7DLMa6JSOE7m3AwPfWjazweEjymK9sP/view?usp=sharing">vmdk 壓縮檔案</a>並下載下來<img alt="" height="129" src="/images/w15檔案.png" width="500"/></span></p>
<p><span>在virtualbox裡新增一個虛擬主機，並在硬碟選擇裡選擇"使用現有虛擬硬碟檔案"-選擇安裝下來的w15虛擬檔案，建立完成後開啟(ub_50733141)。<img alt="" height="441" src="/images/新增虛擬主機.png" width="600"/></span></p>
<p><span>開啟並登入後，利用ifconfig查詢ip-開啟filezilla連線到虛擬主機後，將虛擬主機內</span><span>的"cms"檔案修改成自己倉儲內的檔案。<img alt="" height="504" src="/images/ifconfig.png" width="600"/></span></p>
<p><span><img alt="" height="277" src="/images/個人倉儲檔案.png" width="600"/></span></p>
<p><span>完成後開啟瀏覽器，網址輸入:</span></p>
<p>個人靜態網頁-http://虛擬主機網址。即可利用虛擬主機開啟個人靜態網站<br/><span></span></p>
<p><img alt="" height="322" src="/images/虛擬主機開啟靜態網頁.png" width="600"/></p>
<p><span>個人動態網頁-https://虛擬主機網址。即可利用虛擬主機開啟個人動態網站</span></p>
<p><span><img alt="" height="322" src="/images/虛擬主機開啟動態網頁.png" width="600"/></span></p>
<p>https://虛擬主機網址:5443。即可利用虛擬主機開啟fossil網站</p>
<p><img alt="" height="322" src="/images/5443.png" width="600"/></p>
<h1>2019_cdb_w5.w13</h1>
<p><a href="https://drive.google.com/open?id=1_TQBw1PM7jxrmtsBjvLKbjJWfGs8Ug79">2019_cdb_w5.7z</a>及<a href="https://drive.google.com/file/d/12IOfTpupXL0czFM_ZeHt-6sxfXwZK6ai/view?usp=sharing">2019_cdb_w13.7z</a>兩個檔案下載下來解壓縮，並將自己倉儲資料嵌入後，皆可利用指令開啟動態網頁系統進行編輯，版本push之後，若是切換版本(w5-w13)開啟動態網頁進行改版，須先利用指令git pull讓內容進行同步，在開啟動態網頁，即可進行編輯。</p>
<p><strong><span style="color: #000000;"></span></strong></p>
<h1>期中報告</h1>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="691" src="https://www.youtube.com/embed/_MrTK2XNEA0" width="1106"></iframe></p>
<p>學員期中報告影片錄製</p>
<p>(2019wcmj)學期初到期中上課內容 可利用網誌內容及youtube裡的示範影片進行操作</p>
<p>youtube搜尋:國立虎尾科技大學機械設計工程系 每周上課操作內容可以在youtube的頻道觀看<br/>第1-8周主要教學網站:網際內容管理網誌、2019 Spring網際內容管理</p>
<p>電腦初學者的網際內容管理(1-8周上課目標)</p>
<p>1.了解網路連線設定</p>
<p>2.下載可攜式環境(2019_cdb_w5.7z)</p>
<p>3.建立github倉儲，並理解改版時指令的用意(git add .、git commit -m ""、git push)</p>
<p>4.利用CMSimfly內容，建立自己的Github Pages網站</p>
<p>5.學習如何使用CMSimfly，在網站中加入內容，並進行改版</p>
<p>示範如何開啟網站<br/>開啟已下載完成的cd2019_cdb_w5資料夾並啟動<br/>輸入cd tmp<br/>cd 2019wcmj<br/>python wsgi.py<br/>複製網址並開啟即可進入自己的CMSimfly管理網頁<br/>登入密碼:admin即可登入並且進行編輯<br/>&lt;產生亂數1-51&gt;就是示範在網頁裡新增內容 透過輸入程式碼及文字可以新增內容<br/>新增完內容後可點擊右上角選項generate_pages轉為靜態網頁</p>
<p>並且牢記每次經過新增內容後必須利用指令進行改版(git add .、git commit -m ""、git push)<br/>透過登入github可以看到自己的網頁過去改版新增的內容</p>
<h1>期末報告</h1>
<p>w17、w18主要課程內容:將個人期末報告影片提交至youtube個人頻道，並嵌入個人動態網頁。</p>
<p>學期內容歷程:</p>
<p>1.期初:介紹網際內容管理課程目標、上課時所會用到的相關網站(<a href="https://2019wcm.blogspot.com/">https://2019wcm.blogspot.com/</a>、<a href="https://github.com/">https://github.com/</a>)</p>
<p>2.建立Github倉儲以及相關設定(Key、SSH連線)</p>
<p><span>3.CMSimfly網頁配置、開發與操作</span></p>
<p><span style="color: #ff0000;">以上為期初到期中課程內容</span></p>
<p><span>4.利用不同的程式碼新增程式(ex:亂數產生系統、繪圖系統、國旗圖像)</span></p>
<p>5.VirtualBox虛擬主機安裝及設定</p>
<p>6.介紹程式(filezilla、virtualbox)及網頁(校內授權軟體、VPN連線)的功能</p>
<p></p>